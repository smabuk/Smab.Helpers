namespace Smab.Helpers;

public static partial class Utf16Chars {
	public static partial class SupplementalMathematicalOperators {
		public static readonly char N_ARY_CIRCLED_DOT_OPERATOR                                            = '⨀';  //(U+2A00) feff2a00
		public static readonly char N_ARY_CIRCLED_PLUS_OPERATOR                                           = '⨁';  //(U+2A01) feff2a01
		public static readonly char N_ARY_CIRCLED_TIMES_OPERATOR                                          = '⨂';  //(U+2A02) feff2a02
		public static readonly char N_ARY_UNION_OPERATOR_WITH_DOT                                         = '⨃';  //(U+2A03) feff2a03
		public static readonly char N_ARY_UNION_OPERATOR_WITH_PLUS                                        = '⨄';  //(U+2A04) feff2a04
		public static readonly char N_ARY_SQUARE_INTERSECTION_OPERATOR                                    = '⨅';  //(U+2A05) feff2a05
		public static readonly char N_ARY_SQUARE_UNION_OPERATOR                                           = '⨆';  //(U+2A06) feff2a06
		public static readonly char TWO_LOGICAL_AND_OPERATOR                                              = '⨇';  //(U+2A07) feff2a07
		public static readonly char TWO_LOGICAL_OR_OPERATOR                                               = '⨈';  //(U+2A08) feff2a08
		public static readonly char N_ARY_TIMES_OPERATOR                                                  = '⨉';  //(U+2A09) feff2a09
		public static readonly char MODULO_TWO_SUM                                                        = '⨊';  //(U+2A0A) feff2a0a
		public static readonly char SUMMATION_WITH_INTEGRAL                                               = '⨋';  //(U+2A0B) feff2a0b
		public static readonly char QUADRUPLE_INTEGRAL_OPERATOR                                           = '⨌';  //(U+2A0C) feff2a0c
		public static readonly char FINITE_PART_INTEGRAL                                                  = '⨍';  //(U+2A0D) feff2a0d
		public static readonly char INTEGRAL_WITH_DOUBLE_STROKE                                           = '⨎';  //(U+2A0E) feff2a0e
		public static readonly char INTEGRAL_AVERAGE_WITH_SLASH                                           = '⨏';  //(U+2A0F) feff2a0f
		public static readonly char CIRCULATION_FUNCTION                                                  = '⨐';  //(U+2A10) feff2a10
		public static readonly char ANTICLOCKWISE_INTEGRATION                                             = '⨑';  //(U+2A11) feff2a11
		public static readonly char LINE_INTEGRATION_WITH_RECTANGULAR_PATH_AROUND_POLE                    = '⨒';  //(U+2A12) feff2a12
		public static readonly char LINE_INTEGRATION_WITH_SEMICIRCULAR_PATH_AROUND_POLE                   = '⨓';  //(U+2A13) feff2a13
		public static readonly char LINE_INTEGRATION_NOT_INCLUDING_THE_POLE                               = '⨔';  //(U+2A14) feff2a14
		public static readonly char INTEGRAL_AROUND_A_POINT_OPERATOR                                      = '⨕';  //(U+2A15) feff2a15
		public static readonly char QUATERNION_INTEGRAL_OPERATOR                                          = '⨖';  //(U+2A16) feff2a16
		public static readonly char INTEGRAL_WITH_LEFTWARDS_ARROW_WITH_HOOK                               = '⨗';  //(U+2A17) feff2a17
		public static readonly char INTEGRAL_WITH_TIMES_SIGN                                              = '⨘';  //(U+2A18) feff2a18
		public static readonly char INTEGRAL_WITH_INTERSECTION                                            = '⨙';  //(U+2A19) feff2a19
		public static readonly char INTEGRAL_WITH_UNION                                                   = '⨚';  //(U+2A1A) feff2a1a
		public static readonly char INTEGRAL_WITH_OVERBAR                                                 = '⨛';  //(U+2A1B) feff2a1b
		public static readonly char INTEGRAL_WITH_UNDERBAR                                                = '⨜';  //(U+2A1C) feff2a1c
		public static readonly char JOIN                                                                  = '⨝';  //(U+2A1D) feff2a1d
		public static readonly char LARGE_LEFT_TRIANGLE_OPERATOR                                          = '⨞';  //(U+2A1E) feff2a1e
		public static readonly char Z_NOTATION_SCHEMA_COMPOSITION                                         = '⨟';  //(U+2A1F) feff2a1f
		public static readonly char Z_NOTATION_SCHEMA_PIPING                                              = '⨠';  //(U+2A20) feff2a20
		public static readonly char Z_NOTATION_SCHEMA_PROJECTION                                          = '⨡';  //(U+2A21) feff2a21
		public static readonly char PLUS_SIGN_WITH_SMALL_CIRCLE_ABOVE                                     = '⨢';  //(U+2A22) feff2a22
		public static readonly char PLUS_SIGN_WITH_CIRCUMFLEX_ACCENT_ABOVE                                = '⨣';  //(U+2A23) feff2a23
		public static readonly char PLUS_SIGN_WITH_TILDE_ABOVE                                            = '⨤';  //(U+2A24) feff2a24
		public static readonly char PLUS_SIGN_WITH_DOT_BELOW                                              = '⨥';  //(U+2A25) feff2a25
		public static readonly char PLUS_SIGN_WITH_TILDE_BELOW                                            = '⨦';  //(U+2A26) feff2a26
		public static readonly char PLUS_SIGN_WITH_SUBSCRIPT_TWO                                          = '⨧';  //(U+2A27) feff2a27
		public static readonly char PLUS_SIGN_WITH_BLACK_TRIANGLE                                         = '⨨';  //(U+2A28) feff2a28
		public static readonly char MINUS_SIGN_WITH_COMMA_ABOVE                                           = '⨩';  //(U+2A29) feff2a29
		public static readonly char MINUS_SIGN_WITH_DOT_BELOW                                             = '⨪';  //(U+2A2A) feff2a2a
		public static readonly char MINUS_SIGN_WITH_FALLING_DOTS                                          = '⨫';  //(U+2A2B) feff2a2b
		public static readonly char MINUS_SIGN_WITH_RISING_DOTS                                           = '⨬';  //(U+2A2C) feff2a2c
		public static readonly char PLUS_SIGN_IN_LEFT_HALF_CIRCLE                                         = '⨭';  //(U+2A2D) feff2a2d
		public static readonly char PLUS_SIGN_IN_RIGHT_HALF_CIRCLE                                        = '⨮';  //(U+2A2E) feff2a2e
		public static readonly char VECTOR_OR_CROSS_PRODUCT                                               = '⨯';  //(U+2A2F) feff2a2f
		public static readonly char MULTIPLICATION_SIGN_WITH_DOT_ABOVE                                    = '⨰';  //(U+2A30) feff2a30
		public static readonly char MULTIPLICATION_SIGN_WITH_UNDERBAR                                     = '⨱';  //(U+2A31) feff2a31
		public static readonly char SEMIDIRECT_PRODUCT_WITH_BOTTOM_CLOSED                                 = '⨲';  //(U+2A32) feff2a32
		public static readonly char SMASH_PRODUCT                                                         = '⨳';  //(U+2A33) feff2a33
		public static readonly char MULTIPLICATION_SIGN_IN_LEFT_HALF_CIRCLE                               = '⨴';  //(U+2A34) feff2a34
		public static readonly char MULTIPLICATION_SIGN_IN_RIGHT_HALF_CIRCLE                              = '⨵';  //(U+2A35) feff2a35
		public static readonly char CIRCLED_MULTIPLICATION_SIGN_WITH_CIRCUMFLEX_ACCENT                    = '⨶';  //(U+2A36) feff2a36
		public static readonly char MULTIPLICATION_SIGN_IN_DOUBLE_CIRCLE                                  = '⨷';  //(U+2A37) feff2a37
		public static readonly char CIRCLED_DIVISION_SIGN                                                 = '⨸';  //(U+2A38) feff2a38
		public static readonly char PLUS_SIGN_IN_TRIANGLE                                                 = '⨹';  //(U+2A39) feff2a39
		public static readonly char MINUS_SIGN_IN_TRIANGLE                                                = '⨺';  //(U+2A3A) feff2a3a
		public static readonly char MULTIPLICATION_SIGN_IN_TRIANGLE                                       = '⨻';  //(U+2A3B) feff2a3b
		public static readonly char INTERIOR_PRODUCT                                                      = '⨼';  //(U+2A3C) feff2a3c
		public static readonly char RIGHTHAND_INTERIOR_PRODUCT                                            = '⨽';  //(U+2A3D) feff2a3d
		public static readonly char Z_NOTATION_RELATIONAL_COMPOSITION                                     = '⨾';  //(U+2A3E) feff2a3e
		public static readonly char AMALGAMATION_OR_COPRODUCT                                             = '⨿';  //(U+2A3F) feff2a3f
		public static readonly char INTERSECTION_WITH_DOT                                                 = '⩀';  //(U+2A40) feff2a40
		public static readonly char UNION_WITH_MINUS_SIGN                                                 = '⩁';  //(U+2A41) feff2a41
		public static readonly char UNION_WITH_OVERBAR                                                    = '⩂';  //(U+2A42) feff2a42
		public static readonly char INTERSECTION_WITH_OVERBAR                                             = '⩃';  //(U+2A43) feff2a43
		public static readonly char INTERSECTION_WITH_LOGICAL_AND                                         = '⩄';  //(U+2A44) feff2a44
		public static readonly char UNION_WITH_LOGICAL_OR                                                 = '⩅';  //(U+2A45) feff2a45
		public static readonly char UNION_ABOVE_INTERSECTION                                              = '⩆';  //(U+2A46) feff2a46
		public static readonly char INTERSECTION_ABOVE_UNION                                              = '⩇';  //(U+2A47) feff2a47
		public static readonly char UNION_ABOVE_BAR_ABOVE_INTERSECTION                                    = '⩈';  //(U+2A48) feff2a48
		public static readonly char INTERSECTION_ABOVE_BAR_ABOVE_UNION                                    = '⩉';  //(U+2A49) feff2a49
		public static readonly char UNION_BESIDE_AND_JOINED_WITH_UNION                                    = '⩊';  //(U+2A4A) feff2a4a
		public static readonly char INTERSECTION_BESIDE_AND_JOINED_WITH_INTERSECTION                      = '⩋';  //(U+2A4B) feff2a4b
		public static readonly char CLOSED_UNION_WITH_SERIFS                                              = '⩌';  //(U+2A4C) feff2a4c
		public static readonly char CLOSED_INTERSECTION_WITH_SERIFS                                       = '⩍';  //(U+2A4D) feff2a4d
		public static readonly char DOUBLE_SQUARE_INTERSECTION                                            = '⩎';  //(U+2A4E) feff2a4e
		public static readonly char DOUBLE_SQUARE_UNION                                                   = '⩏';  //(U+2A4F) feff2a4f
		public static readonly char CLOSED_UNION_WITH_SERIFS_AND_SMASH_PRODUCT                            = '⩐';  //(U+2A50) feff2a50
		public static readonly char LOGICAL_AND_WITH_DOT_ABOVE                                            = '⩑';  //(U+2A51) feff2a51
		public static readonly char LOGICAL_OR_WITH_DOT_ABOVE                                             = '⩒';  //(U+2A52) feff2a52
		public static readonly char DOUBLE_LOGICAL_AND                                                    = '⩓';  //(U+2A53) feff2a53
		public static readonly char DOUBLE_LOGICAL_OR                                                     = '⩔';  //(U+2A54) feff2a54
		public static readonly char TWO_INTERSECTING_LOGICAL_AND                                          = '⩕';  //(U+2A55) feff2a55
		public static readonly char TWO_INTERSECTING_LOGICAL_OR                                           = '⩖';  //(U+2A56) feff2a56
		public static readonly char SLOPING_LARGE_OR                                                      = '⩗';  //(U+2A57) feff2a57
		public static readonly char SLOPING_LARGE_AND                                                     = '⩘';  //(U+2A58) feff2a58
		public static readonly char LOGICAL_OR_OVERLAPPING_LOGICAL_AND                                    = '⩙';  //(U+2A59) feff2a59
		public static readonly char LOGICAL_AND_WITH_MIDDLE_STEM                                          = '⩚';  //(U+2A5A) feff2a5a
		public static readonly char LOGICAL_OR_WITH_MIDDLE_STEM                                           = '⩛';  //(U+2A5B) feff2a5b
		public static readonly char LOGICAL_AND_WITH_HORIZONTAL_DASH                                      = '⩜';  //(U+2A5C) feff2a5c
		public static readonly char LOGICAL_OR_WITH_HORIZONTAL_DASH                                       = '⩝';  //(U+2A5D) feff2a5d
		public static readonly char LOGICAL_AND_WITH_DOUBLE_OVERBAR                                       = '⩞';  //(U+2A5E) feff2a5e
		public static readonly char LOGICAL_AND_WITH_UNDERBAR                                             = '⩟';  //(U+2A5F) feff2a5f
		public static readonly char LOGICAL_AND_WITH_DOUBLE_UNDERBAR                                      = '⩠';  //(U+2A60) feff2a60
		public static readonly char SMALL_VEE_WITH_UNDERBAR                                               = '⩡';  //(U+2A61) feff2a61
		public static readonly char LOGICAL_OR_WITH_DOUBLE_OVERBAR                                        = '⩢';  //(U+2A62) feff2a62
		public static readonly char LOGICAL_OR_WITH_DOUBLE_UNDERBAR                                       = '⩣';  //(U+2A63) feff2a63
		public static readonly char Z_NOTATION_DOMAIN_ANTIRESTRICTION                                     = '⩤';  //(U+2A64) feff2a64
		public static readonly char Z_NOTATION_RANGE_ANTIRESTRICTION                                      = '⩥';  //(U+2A65) feff2a65
		public static readonly char EQUALS_SIGN_WITH_DOT_BELOW                                            = '⩦';  //(U+2A66) feff2a66
		public static readonly char IDENTICAL_WITH_DOT_ABOVE                                              = '⩧';  //(U+2A67) feff2a67
		public static readonly char TRIPLE_HORIZONTAL_BAR_WITH_DOUBLE_VERTICAL_STROKE                     = '⩨';  //(U+2A68) feff2a68
		public static readonly char TRIPLE_HORIZONTAL_BAR_WITH_TRIPLE_VERTICAL_STROKE                     = '⩩';  //(U+2A69) feff2a69
		public static readonly char TILDE_OPERATOR_WITH_DOT_ABOVE                                         = '⩪';  //(U+2A6A) feff2a6a
		public static readonly char TILDE_OPERATOR_WITH_RISING_DOTS                                       = '⩫';  //(U+2A6B) feff2a6b
		public static readonly char SIMILAR_MINUS_SIMILAR                                                 = '⩬';  //(U+2A6C) feff2a6c
		public static readonly char CONGRUENT_WITH_DOT_ABOVE                                              = '⩭';  //(U+2A6D) feff2a6d
		public static readonly char EQUALS_WITH_ASTERISK                                                  = '⩮';  //(U+2A6E) feff2a6e
		public static readonly char ALMOST_EQUAL_TO_WITH_CIRCUMFLEX_ACCENT                                = '⩯';  //(U+2A6F) feff2a6f
		public static readonly char APPROXIMATELY_EQUAL_OR_EQUAL_TO                                       = '⩰';  //(U+2A70) feff2a70
		public static readonly char EQUALS_SIGN_ABOVE_PLUS_SIGN                                           = '⩱';  //(U+2A71) feff2a71
		public static readonly char PLUS_SIGN_ABOVE_EQUALS_SIGN                                           = '⩲';  //(U+2A72) feff2a72
		public static readonly char EQUALS_SIGN_ABOVE_TILDE_OPERATOR                                      = '⩳';  //(U+2A73) feff2a73
		public static readonly char DOUBLE_COLON_EQUAL                                                    = '⩴';  //(U+2A74) feff2a74
		public static readonly char TWO_CONSECUTIVE_EQUALS_SIGNS                                          = '⩵';  //(U+2A75) feff2a75
		public static readonly char THREE_CONSECUTIVE_EQUALS_SIGNS                                        = '⩶';  //(U+2A76) feff2a76
		public static readonly char EQUALS_SIGN_WITH_TWO_DOTS_ABOVE_AND_TWO_DOTS_BELOW                    = '⩷';  //(U+2A77) feff2a77
		public static readonly char EQUIVALENT_WITH_FOUR_DOTS_ABOVE                                       = '⩸';  //(U+2A78) feff2a78
		public static readonly char LESS_THAN_WITH_CIRCLE_INSIDE                                          = '⩹';  //(U+2A79) feff2a79
		public static readonly char GREATER_THAN_WITH_CIRCLE_INSIDE                                       = '⩺';  //(U+2A7A) feff2a7a
		public static readonly char LESS_THAN_WITH_QUESTION_MARK_ABOVE                                    = '⩻';  //(U+2A7B) feff2a7b
		public static readonly char GREATER_THAN_WITH_QUESTION_MARK_ABOVE                                 = '⩼';  //(U+2A7C) feff2a7c
		public static readonly char LESS_THAN_OR_SLANTED_EQUAL_TO                                         = '⩽';  //(U+2A7D) feff2a7d
		public static readonly char GREATER_THAN_OR_SLANTED_EQUAL_TO                                      = '⩾';  //(U+2A7E) feff2a7e
		public static readonly char LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_INSIDE                         = '⩿';  //(U+2A7F) feff2a7f
		public static readonly char GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_INSIDE                      = '⪀';  //(U+2A80) feff2a80
		public static readonly char LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE                          = '⪁';  //(U+2A81) feff2a81
		public static readonly char GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE                       = '⪂';  //(U+2A82) feff2a82
		public static readonly char LESS_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE_RIGHT                    = '⪃';  //(U+2A83) feff2a83
		public static readonly char GREATER_THAN_OR_SLANTED_EQUAL_TO_WITH_DOT_ABOVE_LEFT                  = '⪄';  //(U+2A84) feff2a84
		public static readonly char LESS_THAN_OR_APPROXIMATE                                              = '⪅';  //(U+2A85) feff2a85
		public static readonly char GREATER_THAN_OR_APPROXIMATE                                           = '⪆';  //(U+2A86) feff2a86
		public static readonly char LESS_THAN_AND_SINGLE_LINE_NOT_EQUAL_TO                                = '⪇';  //(U+2A87) feff2a87
		public static readonly char GREATER_THAN_AND_SINGLE_LINE_NOT_EQUAL_TO                             = '⪈';  //(U+2A88) feff2a88
		public static readonly char LESS_THAN_AND_NOT_APPROXIMATE                                         = '⪉';  //(U+2A89) feff2a89
		public static readonly char GREATER_THAN_AND_NOT_APPROXIMATE                                      = '⪊';  //(U+2A8A) feff2a8a
		public static readonly char LESS_THAN_ABOVE_DOUBLE_LINE_EQUAL_ABOVE_GREATER_THAN                  = '⪋';  //(U+2A8B) feff2a8b
		public static readonly char GREATER_THAN_ABOVE_DOUBLE_LINE_EQUAL_ABOVE_LESS_THAN                  = '⪌';  //(U+2A8C) feff2a8c
		public static readonly char LESS_THAN_ABOVE_SIMILAR_OR_EQUAL                                      = '⪍';  //(U+2A8D) feff2a8d
		public static readonly char GREATER_THAN_ABOVE_SIMILAR_OR_EQUAL                                   = '⪎';  //(U+2A8E) feff2a8e
		public static readonly char LESS_THAN_ABOVE_SIMILAR_ABOVE_GREATER_THAN                            = '⪏';  //(U+2A8F) feff2a8f
		public static readonly char GREATER_THAN_ABOVE_SIMILAR_ABOVE_LESS_THAN                            = '⪐';  //(U+2A90) feff2a90
		public static readonly char LESS_THAN_ABOVE_GREATER_THAN_ABOVE_DOUBLE_LINE_EQUAL                  = '⪑';  //(U+2A91) feff2a91
		public static readonly char GREATER_THAN_ABOVE_LESS_THAN_ABOVE_DOUBLE_LINE_EQUAL                  = '⪒';  //(U+2A92) feff2a92
		public static readonly char LESS_THAN_ABOVE_SLANTED_EQUAL_ABOVE_GREATER_THAN_ABOVE_SLANTED_EQUAL  = '⪓';  //(U+2A93) feff2a93
		public static readonly char GREATER_THAN_ABOVE_SLANTED_EQUAL_ABOVE_LESS_THAN_ABOVE_SLANTED_EQUAL  = '⪔';  //(U+2A94) feff2a94
		public static readonly char SLANTED_EQUAL_TO_OR_LESS_THAN                                         = '⪕';  //(U+2A95) feff2a95
		public static readonly char SLANTED_EQUAL_TO_OR_GREATER_THAN                                      = '⪖';  //(U+2A96) feff2a96
		public static readonly char SLANTED_EQUAL_TO_OR_LESS_THAN_WITH_DOT_INSIDE                         = '⪗';  //(U+2A97) feff2a97
		public static readonly char SLANTED_EQUAL_TO_OR_GREATER_THAN_WITH_DOT_INSIDE                      = '⪘';  //(U+2A98) feff2a98
		public static readonly char DOUBLE_LINE_EQUAL_TO_OR_LESS_THAN                                     = '⪙';  //(U+2A99) feff2a99
		public static readonly char DOUBLE_LINE_EQUAL_TO_OR_GREATER_THAN                                  = '⪚';  //(U+2A9A) feff2a9a
		public static readonly char DOUBLE_LINE_SLANTED_EQUAL_TO_OR_LESS_THAN                             = '⪛';  //(U+2A9B) feff2a9b
		public static readonly char DOUBLE_LINE_SLANTED_EQUAL_TO_OR_GREATER_THAN                          = '⪜';  //(U+2A9C) feff2a9c
		public static readonly char SIMILAR_OR_LESS_THAN                                                  = '⪝';  //(U+2A9D) feff2a9d
		public static readonly char SIMILAR_OR_GREATER_THAN                                               = '⪞';  //(U+2A9E) feff2a9e
		public static readonly char SIMILAR_ABOVE_LESS_THAN_ABOVE_EQUALS_SIGN                             = '⪟';  //(U+2A9F) feff2a9f
		public static readonly char SIMILAR_ABOVE_GREATER_THAN_ABOVE_EQUALS_SIGN                          = '⪠';  //(U+2AA0) feff2aa0
		public static readonly char DOUBLE_NESTED_LESS_THAN                                               = '⪡';  //(U+2AA1) feff2aa1
		public static readonly char DOUBLE_NESTED_GREATER_THAN                                            = '⪢';  //(U+2AA2) feff2aa2
		public static readonly char DOUBLE_NESTED_LESS_THAN_WITH_UNDERBAR                                 = '⪣';  //(U+2AA3) feff2aa3
		public static readonly char GREATER_THAN_OVERLAPPING_LESS_THAN                                    = '⪤';  //(U+2AA4) feff2aa4
		public static readonly char GREATER_THAN_BESIDE_LESS_THAN                                         = '⪥';  //(U+2AA5) feff2aa5
		public static readonly char LESS_THAN_CLOSED_BY_CURVE                                             = '⪦';  //(U+2AA6) feff2aa6
		public static readonly char GREATER_THAN_CLOSED_BY_CURVE                                          = '⪧';  //(U+2AA7) feff2aa7
		public static readonly char LESS_THAN_CLOSED_BY_CURVE_ABOVE_SLANTED_EQUAL                         = '⪨';  //(U+2AA8) feff2aa8
		public static readonly char GREATER_THAN_CLOSED_BY_CURVE_ABOVE_SLANTED_EQUAL                      = '⪩';  //(U+2AA9) feff2aa9
		public static readonly char SMALLER_THAN                                                          = '⪪';  //(U+2AAA) feff2aaa
		public static readonly char LARGER_THAN                                                           = '⪫';  //(U+2AAB) feff2aab
		public static readonly char SMALLER_THAN_OR_EQUAL_TO                                              = '⪬';  //(U+2AAC) feff2aac
		public static readonly char LARGER_THAN_OR_EQUAL_TO                                               = '⪭';  //(U+2AAD) feff2aad
		public static readonly char EQUALS_SIGN_WITH_BUMPY_ABOVE                                          = '⪮';  //(U+2AAE) feff2aae
		public static readonly char PRECEDES_ABOVE_SINGLE_LINE_EQUALS_SIGN                                = '⪯';  //(U+2AAF) feff2aaf
		public static readonly char SUCCEEDS_ABOVE_SINGLE_LINE_EQUALS_SIGN                                = '⪰';  //(U+2AB0) feff2ab0
		public static readonly char PRECEDES_ABOVE_SINGLE_LINE_NOT_EQUAL_TO                               = '⪱';  //(U+2AB1) feff2ab1
		public static readonly char SUCCEEDS_ABOVE_SINGLE_LINE_NOT_EQUAL_TO                               = '⪲';  //(U+2AB2) feff2ab2
		public static readonly char PRECEDES_ABOVE_EQUALS_SIGN                                            = '⪳';  //(U+2AB3) feff2ab3
		public static readonly char SUCCEEDS_ABOVE_EQUALS_SIGN                                            = '⪴';  //(U+2AB4) feff2ab4
		public static readonly char PRECEDES_ABOVE_NOT_EQUAL_TO                                           = '⪵';  //(U+2AB5) feff2ab5
		public static readonly char SUCCEEDS_ABOVE_NOT_EQUAL_TO                                           = '⪶';  //(U+2AB6) feff2ab6
		public static readonly char PRECEDES_ABOVE_ALMOST_EQUAL_TO                                        = '⪷';  //(U+2AB7) feff2ab7
		public static readonly char SUCCEEDS_ABOVE_ALMOST_EQUAL_TO                                        = '⪸';  //(U+2AB8) feff2ab8
		public static readonly char PRECEDES_ABOVE_NOT_ALMOST_EQUAL_TO                                    = '⪹';  //(U+2AB9) feff2ab9
		public static readonly char SUCCEEDS_ABOVE_NOT_ALMOST_EQUAL_TO                                    = '⪺';  //(U+2ABA) feff2aba
		public static readonly char DOUBLE_PRECEDES                                                       = '⪻';  //(U+2ABB) feff2abb
		public static readonly char DOUBLE_SUCCEEDS                                                       = '⪼';  //(U+2ABC) feff2abc
		public static readonly char SUBSET_WITH_DOT                                                       = '⪽';  //(U+2ABD) feff2abd
		public static readonly char SUPERSET_WITH_DOT                                                     = '⪾';  //(U+2ABE) feff2abe
		public static readonly char SUBSET_WITH_PLUS_SIGN_BELOW                                           = '⪿';  //(U+2ABF) feff2abf
		public static readonly char SUPERSET_WITH_PLUS_SIGN_BELOW                                         = '⫀';  //(U+2AC0) feff2ac0
		public static readonly char SUBSET_WITH_MULTIPLICATION_SIGN_BELOW                                 = '⫁';  //(U+2AC1) feff2ac1
		public static readonly char SUPERSET_WITH_MULTIPLICATION_SIGN_BELOW                               = '⫂';  //(U+2AC2) feff2ac2
		public static readonly char SUBSET_OF_OR_EQUAL_TO_WITH_DOT_ABOVE                                  = '⫃';  //(U+2AC3) feff2ac3
		public static readonly char SUPERSET_OF_OR_EQUAL_TO_WITH_DOT_ABOVE                                = '⫄';  //(U+2AC4) feff2ac4
		public static readonly char SUBSET_OF_ABOVE_EQUALS_SIGN                                           = '⫅';  //(U+2AC5) feff2ac5
		public static readonly char SUPERSET_OF_ABOVE_EQUALS_SIGN                                         = '⫆';  //(U+2AC6) feff2ac6
		public static readonly char SUBSET_OF_ABOVE_TILDE_OPERATOR                                        = '⫇';  //(U+2AC7) feff2ac7
		public static readonly char SUPERSET_OF_ABOVE_TILDE_OPERATOR                                      = '⫈';  //(U+2AC8) feff2ac8
		public static readonly char SUBSET_OF_ABOVE_ALMOST_EQUAL_TO                                       = '⫉';  //(U+2AC9) feff2ac9
		public static readonly char SUPERSET_OF_ABOVE_ALMOST_EQUAL_TO                                     = '⫊';  //(U+2ACA) feff2aca
		public static readonly char SUBSET_OF_ABOVE_NOT_EQUAL_TO                                          = '⫋';  //(U+2ACB) feff2acb
		public static readonly char SUPERSET_OF_ABOVE_NOT_EQUAL_TO                                        = '⫌';  //(U+2ACC) feff2acc
		public static readonly char SQUARE_LEFT_OPEN_BOX_OPERATOR                                         = '⫍';  //(U+2ACD) feff2acd
		public static readonly char SQUARE_RIGHT_OPEN_BOX_OPERATOR                                        = '⫎';  //(U+2ACE) feff2ace
		public static readonly char CLOSED_SUBSET                                                         = '⫏';  //(U+2ACF) feff2acf
		public static readonly char CLOSED_SUPERSET                                                       = '⫐';  //(U+2AD0) feff2ad0
		public static readonly char CLOSED_SUBSET_OR_EQUAL_TO                                             = '⫑';  //(U+2AD1) feff2ad1
		public static readonly char CLOSED_SUPERSET_OR_EQUAL_TO                                           = '⫒';  //(U+2AD2) feff2ad2
		public static readonly char SUBSET_ABOVE_SUPERSET                                                 = '⫓';  //(U+2AD3) feff2ad3
		public static readonly char SUPERSET_ABOVE_SUBSET                                                 = '⫔';  //(U+2AD4) feff2ad4
		public static readonly char SUBSET_ABOVE_SUBSET                                                   = '⫕';  //(U+2AD5) feff2ad5
		public static readonly char SUPERSET_ABOVE_SUPERSET                                               = '⫖';  //(U+2AD6) feff2ad6
		public static readonly char SUPERSET_BESIDE_SUBSET                                                = '⫗';  //(U+2AD7) feff2ad7
		public static readonly char SUPERSET_BESIDE_AND_JOINED_BY_DASH_WITH_SUBSET                        = '⫘';  //(U+2AD8) feff2ad8
		public static readonly char ELEMENT_OF_OPENING_DOWNWARDS                                          = '⫙';  //(U+2AD9) feff2ad9
		public static readonly char PITCHFORK_WITH_TEE_TOP                                                = '⫚';  //(U+2ADA) feff2ada
		public static readonly char TRANSVERSAL_INTERSECTION                                              = '⫛';  //(U+2ADB) feff2adb
		public static readonly char FORKING                                                               = '⫝̸';  //(U+2ADC) feff2adc
		public static readonly char NONFORKING                                                            = '⫝';  //(U+2ADD) feff2add
		public static readonly char SHORT_LEFT_TACK                                                       = '⫞';  //(U+2ADE) feff2ade
		public static readonly char SHORT_DOWN_TACK                                                       = '⫟';  //(U+2ADF) feff2adf
		public static readonly char SHORT_UP_TACK                                                         = '⫠';  //(U+2AE0) feff2ae0
		public static readonly char PERPENDICULAR_WITH_S                                                  = '⫡';  //(U+2AE1) feff2ae1
		public static readonly char VERTICAL_BAR_TRIPLE_RIGHT_TURNSTILE                                   = '⫢';  //(U+2AE2) feff2ae2
		public static readonly char DOUBLE_VERTICAL_BAR_LEFT_TURNSTILE                                    = '⫣';  //(U+2AE3) feff2ae3
		public static readonly char VERTICAL_BAR_DOUBLE_LEFT_TURNSTILE                                    = '⫤';  //(U+2AE4) feff2ae4
		public static readonly char DOUBLE_VERTICAL_BAR_DOUBLE_LEFT_TURNSTILE                             = '⫥';  //(U+2AE5) feff2ae5
		public static readonly char LONG_DASH_FROM_LEFT_MEMBER_OF_DOUBLE_VERTICAL                         = '⫦';  //(U+2AE6) feff2ae6
		public static readonly char SHORT_DOWN_TACK_WITH_OVERBAR                                          = '⫧';  //(U+2AE7) feff2ae7
		public static readonly char SHORT_UP_TACK_WITH_UNDERBAR                                           = '⫨';  //(U+2AE8) feff2ae8
		public static readonly char SHORT_UP_TACK_ABOVE_SHORT_DOWN_TACK                                   = '⫩';  //(U+2AE9) feff2ae9
		public static readonly char DOUBLE_DOWN_TACK                                                      = '⫪';  //(U+2AEA) feff2aea
		public static readonly char DOUBLE_UP_TACK                                                        = '⫫';  //(U+2AEB) feff2aeb
		public static readonly char DOUBLE_STROKE_NOT_SIGN                                                = '⫬';  //(U+2AEC) feff2aec
		public static readonly char REVERSED_DOUBLE_STROKE_NOT_SIGN                                       = '⫭';  //(U+2AED) feff2aed
		public static readonly char DOES_NOT_DIVIDE_WITH_REVERSED_NEGATION_SLASH                          = '⫮';  //(U+2AEE) feff2aee
		public static readonly char VERTICAL_LINE_WITH_CIRCLE_ABOVE                                       = '⫯';  //(U+2AEF) feff2aef
		public static readonly char VERTICAL_LINE_WITH_CIRCLE_BELOW                                       = '⫰';  //(U+2AF0) feff2af0
		public static readonly char DOWN_TACK_WITH_CIRCLE_BELOW                                           = '⫱';  //(U+2AF1) feff2af1
		public static readonly char PARALLEL_WITH_HORIZONTAL_STROKE                                       = '⫲';  //(U+2AF2) feff2af2
		public static readonly char PARALLEL_WITH_TILDE_OPERATOR                                          = '⫳';  //(U+2AF3) feff2af3
		public static readonly char TRIPLE_VERTICAL_BAR_BINARY_RELATION                                   = '⫴';  //(U+2AF4) feff2af4
		public static readonly char TRIPLE_VERTICAL_BAR_WITH_HORIZONTAL_STROKE                            = '⫵';  //(U+2AF5) feff2af5
		public static readonly char TRIPLE_COLON_OPERATOR                                                 = '⫶';  //(U+2AF6) feff2af6
		public static readonly char TRIPLE_NESTED_LESS_THAN                                               = '⫷';  //(U+2AF7) feff2af7
		public static readonly char TRIPLE_NESTED_GREATER_THAN                                            = '⫸';  //(U+2AF8) feff2af8
		public static readonly char DOUBLE_LINE_SLANTED_LESS_THAN_OR_EQUAL_TO                             = '⫹';  //(U+2AF9) feff2af9
		public static readonly char DOUBLE_LINE_SLANTED_GREATER_THAN_OR_EQUAL_TO                          = '⫺';  //(U+2AFA) feff2afa
		public static readonly char TRIPLE_SOLIDUS_BINARY_RELATION                                        = '⫻';  //(U+2AFB) feff2afb
		public static readonly char LARGE_TRIPLE_VERTICAL_BAR_OPERATOR                                    = '⫼';  //(U+2AFC) feff2afc
		public static readonly char DOUBLE_SOLIDUS_OPERATOR                                               = '⫽';  //(U+2AFD) feff2afd
		public static readonly char WHITE_VERTICAL_BAR                                                    = '⫾';  //(U+2AFE) feff2afe
		public static readonly char N_ARY_WHITE_VERTICAL_BAR                                              = '⫿';  //(U+2AFF) feff2aff
	}
}
